[{"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\index.js":"1","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\App.js":"2","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\reportWebVitals.js":"3","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\pages\\Signup.js":"4","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\pages\\Login.js":"5","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\pages\\Home.js":"6","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\utils\\auth.js":"7","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\utils\\mutations.js":"8","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\Header\\index.js":"9","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\Card\\index.js":"10","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\utils\\queries.js":"11","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\MeetingList\\index.js":"12","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\MeetingForm\\index.js":"13","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\UploadImage\\index.js":"14","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\pages\\SingleMeeting.js":"15"},{"size":547,"mtime":1635843524198,"results":"16","hashOfConfig":"17"},{"size":2568,"mtime":1636205877011,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1635320523999,"results":"19","hashOfConfig":"17"},{"size":2658,"mtime":1635320523998,"results":"20","hashOfConfig":"17"},{"size":2503,"mtime":1635320523998,"results":"21","hashOfConfig":"17"},{"size":1020,"mtime":1635773113923,"results":"22","hashOfConfig":"17"},{"size":1048,"mtime":1635572659754,"results":"23","hashOfConfig":"17"},{"size":1565,"mtime":1636115252281,"results":"24","hashOfConfig":"17"},{"size":2916,"mtime":1635769762519,"results":"25","hashOfConfig":"17"},{"size":2025,"mtime":1636206273778,"results":"26","hashOfConfig":"17"},{"size":1770,"mtime":1636207430015,"results":"27","hashOfConfig":"17"},{"size":502,"mtime":1635675805501,"results":"28","hashOfConfig":"17"},{"size":13186,"mtime":1636242862875,"results":"29","hashOfConfig":"17"},{"size":1405,"mtime":1636018015491,"results":"30","hashOfConfig":"17"},{"size":865,"mtime":1636207256756,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"163wbh1",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\index.js",[],["70","71"],"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\App.js",["72"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { createUploadLink } from \"apollo-upload-client\"\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport MeetingForm from './components/MeetingForm';\nimport SingleMeeting from './pages/SingleMeeting';\n\n\n// import SingleThought from './pages/SingleThought';\n// import Profile from './pages/Profile';\nimport Header from './components/Header';\n// import Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createUploadLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/addEvent\">\n              <MeetingForm />\n            </Route>\n            <Route exact path=\"/meeting/:meetingId\">\n              <SingleMeeting />\n            </Route>\n\n            {/* <Route exact path=\"/me\">\n              <Profile />\n            </Route> */}\n            {/* <Route exact path=\"/profiles/:username\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/thoughts/:thoughtId\">\n              <SingleThought />\n            </Route> */}\n          </div>\n          {/* <Footer /> */}\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\reportWebVitals.js",[],"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\pages\\Signup.js",[],"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\pages\\Login.js",[],"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\pages\\Home.js",["73"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport Card from '../components/Card'\n\nimport MeetingList from '../components/MeetingList';\n\n\nimport { QUERY_MEETINGS } from '../utils/queries';\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_MEETINGS);\n  const meetings = data?.meetings || [];\n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n        <div\n          className=\"col-12 col-md-8 mb-3 p-3\"\n          style={\n            { \n              border: '1px dotted #1a1a1a',\n              fontSize: \"1.2rem \",\n              fontWeight: \"900\"\n            }\n          }\n        >\n         Upcoming Events\n          </div>\n          <div className=\"col-12 col-md-8 mb-3\">\n            {loading ? (\n              <div>Loading...</div>\n            ) : (\n              <MeetingList\n                meetings={meetings}                \n              />\n            )}\n          </div>               \n        </div>      \n    </main>\n  );\n};\n\nexport default Home;\n","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\utils\\auth.js",[],"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\utils\\mutations.js",[],"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\Header\\index.js",["74"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Nav , Navbar , NavDropdown , Dropdown , Container , SplitButton} from \"react-bootstrap\";\n\nimport Auth from '../../utils/auth';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <div> \n      <Navbar \n      variant=\"dark\" bg=\"dark\" expand=\"lg\" \n      className=\" mb-4 py-3 flex-row align-center\" \n      > \n        <Container fluid className=\"container flex-row justify-space-between-lg justify-center align-center\">\n          <Navbar.Brand href=\"#home\">\n            <Link className=\"text-light\" to=\"/\">\n                  <h2 className=\"m-0\">Meet and Learn</h2>\n            </Link>\n          </Navbar.Brand>\n\n          <Navbar.Toggle aria-controls=\"navbar-dark-example\" />\n          <Navbar.Collapse id=\"navbar-dark-example\">\n          {Auth.loggedIn() ? (\n            <>\n              <Nav className=\"ml-auto\">\n              <SplitButton\n                align={{ lg: 'end' }}\n                title={`${Auth.getProfile().data.username}'s Account`}\n                // id=\"dropdown-menu-align-responsive-2\"\n                className=\" m-2\" \n              >\n                {/* <NavDropdown\n                  id=\"nav-dropdown-dark-example\"\n                  title=\"Account\"\n                  menuVariant=\"dark\" \n                  className=\"btn btn-lg btn-info m-2\"         \n                > */}\n                  <NavDropdown.Item href=\"#action/3.1\">\n                    <Link to=\"/me\" variant=\"light\">\n                      My Profile\n                    </Link>\n                    </NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action/3.2\">\n                  <Link to=\"/addEvent\" variant=\"light\">\n                      Create New Event\n                    </Link>\n                  </NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                {/* </NavDropdown> */}\n                </SplitButton>\n              \n                <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                  Logout\n                </button>\n              </Nav>\n            </>\n              ) : (\n                <div className=\"ml-auto\">\n                \n                  <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                    Login\n                  </Link>\n                \n                  <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                    Signup\n                  </Link>\n                </div>\n              )}\n\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\Card\\index.js",["75"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./card.css\";\r\n\r\nimport { Row, Col , Card, Button, CardGroup } from \"react-bootstrap\";\r\n\r\nconst styles = {\r\n  card :{\r\n    marginBottom: \"4rem\",\r\n    backgroundColor: \"rgb(247, 247, 247)\",\r\n    height: \"100%\",\r\n    // borderRadius: \"100px\",\r\n  },\r\n  cardTitle : {\r\n      fontWeight: \"900\",\r\n      flexGrow: \"1\"\r\n  },\r\n  cardDescription : {\r\n      fontSize: \"13px\" ,\r\n      height: \"100px\"\r\n  },\r\n  cardImage :{\r\n    width:  \"100px\",\r\n    height: \"150px\",\r\n    objectFit: \"cover\",\r\n    textAlign: \"center\"     \r\n  },\r\n  btn: {\r\n    marginTop: \"1rem\",\r\n    textAlign: \"center\",\r\n    color: \"black\",\r\n    backgroundColor: \"goldenrod\",\r\n    borderColor: \"black\",\r\n    transition: \"all ease .5s\",  \r\n\r\n  }\r\n}\r\n\r\nconst MeetingCard = (props) => {\r\n  // console.log(props)\r\n  const length = 250;\r\n  let description = props.meeting.description;    \r\n  if (description.length > length) {\r\n      description = description.substring(0, length) + \".....\";\r\n  }\r\nreturn (\r\n  <CardGroup>\r\n    <Col>\r\n      <Card className=\"m-6 border-0 shadow\" style={styles.card}>\r\n      <Card.Header>Featured</Card.Header>\r\n        <Card.Img {...styles.cardImage} variant=\"top\" src={props.meeting.meetingPhoto} alt={props.meeting.title} />\r\n        <Card.Body>\r\n          <Card.Title style={styles.cardTitle}> {props.meeting.title} </Card.Title>\r\n          <Card.Text style={styles.cardDescription}>\r\n          {description}\r\n          </Card.Text>          \r\n        </Card.Body>\r\n        <Link\r\n            // className=\"btn btn-primary btn-block btn-squared\"\r\n            to={`/meetings/${props.meeting._id}`}\r\n          >\r\n        <Button style={styles.btn} variant=\"primary\" className=\"btn1\">Click for details</Button>\r\n        </Link>\r\n        <Card.Footer>\r\n          <small className=\"text-muted\">Event Date & Time : <strong>{props.meeting.date}</strong></small>\r\n        </Card.Footer>\r\n      </Card>\r\n    </Col>\r\n  </CardGroup>\r\n\r\n);\r\n};\r\n\r\nexport default MeetingCard;","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\utils\\queries.js",[],"C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\MeetingList\\index.js",["76"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from '../Card'\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nconst MeetingList = ({\r\n  meetings,  \r\n  showUsername = true,\r\n}) => {\r\n  if (!meetings.length) {\r\n    return <h3>No Meetings Yet</h3>;\r\n  }\r\n\r\n  return (\r\n    <Row xs={1} md={3} className=\"g-4\">\r\n      {meetings.map((meeting) => (\r\n              <Card key={meeting.id} meeting={meeting} />\r\n            ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MeetingList;\r\n","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\MeetingForm\\index.js",["77","78","79","80","81","82","83","84"],"import React, { useState , useEffect } from 'react';\r\nimport { Link , Redirect  } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_MEETING} from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport \"./meetingForm.css\";\r\n\r\nimport UploadImage from '../UploadImage'\r\n\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport GooglePlacesAutocomplete, {\r\n  geocodeByPlaceId\r\n} from \"react-google-places-autocomplete\";\r\n\r\nimport SimpleFileUpload, {\r\n  SimpleFileUploadProvider\r\n} from 'react-simple-file-upload'\r\n\r\nrequire('dotenv').config();\r\n\r\nconst API = process.env.REACT_APP_GOOGLE_PLACES_API\r\n  \r\nexport default function MeetingForm () { \r\n  const [formState, setFormState] = useState({\r\n   title: '',\r\n   description: '',\r\n   meetingPhoto: '',\r\n   date:'',\r\n   duration:'',\r\n   attendees: [],\r\n   onLine:false,\r\n   ZoomURL:''\r\n  });\r\n\r\n  let Location = ''\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n\r\n  const [currentDuration, setCurrentDuration] = useState('');\r\n\r\n  const [currentCheckbox, setCurrentCheckbox] = useState(false) ; \r\n\r\n const [photo, setPhoto] = useState([]) ;\r\n\r\n  const [addMeeting, { error , data }] = useMutation(ADD_MEETING);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (currentCheckbox == false) {\r\n       Location = address.label\r\n    }\r\n\r\n    try {\r\n      const { data } = await addMeeting({\r\n        variables: {\r\n          ...formState,\r\n          date:startDate,\r\n          duration:currentDuration,\r\n          location:Location,\r\n          onLine:currentCheckbox,          \r\n          attendees: [Auth.getProfile().data._id],\r\n          organiser: Auth.getProfile().data._id,\r\n          meetingPhoto: photo\r\n        },\r\n      });      \r\n      // await console.log (addMeeting)      \r\n      document.location = \"/\"\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (file) => {\r\n    await console.log(file)\r\n    await setFormState({\r\n      ...formState,\r\n      // meetingPhoto: formState.meetingPhoto      \r\n      meetingPhoto: file.file? file.file : formState.meetingPhoto\r\n    })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState ({\r\n      ...formState,\r\n      [name]: value\r\n    })    \r\n  };\r\n   \r\n  const changeDuration = (newDuration) => {\r\n    setCurrentDuration(newDuration)\r\n  }\r\n\r\n  const [address, setAddress] = useState();\r\n  const [addressObj, setAddressObj] = useState();\r\n\r\n  const getAddressObject = (address_components) => {\r\n\r\n    console.log(address_components);\r\n\r\n    const ShouldBeComponent = {\r\n      street_number: [\"street_number\"],\r\n      postal_code: [\"postal_code\"],\r\n      street: [\"street_address\", \"route\"],\r\n      province: [\r\n        \"administrative_area_level_1\",\r\n        \"administrative_area_level_2\",\r\n        \"administrative_area_level_3\",\r\n        \"administrative_area_level_4\",\r\n        \"administrative_area_level_5\"\r\n      ],\r\n      city: [\r\n        \"locality\",\r\n        \"sublocality\",\r\n        \"sublocality_level_1\",\r\n        \"sublocality_level_2\",\r\n        \"sublocality_level_3\",\r\n        \"sublocality_level_4\"\r\n      ],\r\n      country: [\"country\"]\r\n    };\r\n\r\n    let address = {\r\n      street_number: \"\",\r\n      postal_code: \"\",\r\n      street: \"\",\r\n      province: \"\",\r\n      city: \"\",\r\n      country: \"\"\r\n    };\r\n\r\n    address_components.forEach((component) => {\r\n      for (var shouldBe in ShouldBeComponent) {\r\n        if (ShouldBeComponent[shouldBe].indexOf(component.types[0]) !== -1) {\r\n          if (shouldBe === \"country\") {\r\n            address[shouldBe] = component.short_name;\r\n          } else {\r\n            address[shouldBe] = component.long_name;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Fix the shape to match our schema\r\n    address.address = address.street_number + \" \" + address.street;\r\n    delete address.street_number;\r\n    delete address.street;\r\n    if (address.country === \"US\") {\r\n      address.state = address.province;\r\n      delete address.province;\r\n    }\r\n    return address;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const func = async () => {\r\n      const geocodeObj =\r\n        address &&\r\n        address.value &&\r\n        (await geocodeByPlaceId(address.value.place_id));\r\n      const addressObject =\r\n        geocodeObj && getAddressObject(geocodeObj[0].address_components);\r\n\r\n      console.log(\"addressObject\", addressObject);\r\n\r\n      setAddressObj(addressObject);\r\n\r\n      console.log(\"address\",address);\r\n    //   console.log(\"address\",address.keys);\r\n\r\n    };\r\n    func();\r\n  }, [address]);\r\n\r\n  async function handleFile(url){\r\n    await console.log('The URL of the file is ' + url)\r\n    await setPhoto([...photo, url])\r\n  }\r\n   \r\n  return (\r\n    <div> \r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <main className=\"flex-row justify-center mb-4\">\r\n            <div className=\"col-12 col-lg-8\">\r\n              <div className=\"card\">\r\n                <h4 className=\"card-header bg-dark text-light p-2\">Create new event</h4>\r\n                <div className=\"card-body\">\r\n                  <div style={{ display: 'block', \r\n                                // width: 800, \r\n                                padding: 30 }}>      \r\n                    <Form onSubmit={handleFormSubmit}>\r\n                      <Form.Group className=\" form-input bg-warning\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control \r\n                          className=\"form-input form-100\"\r\n                          name=\"title\"\r\n                          type=\"text\" \r\n                          placeholder=\"Enter a unique title\" \r\n                          value={formState.title}\r\n                          onChange={handleChange}\r\n                        />\r\n                      </Form.Group>                     \r\n                        \r\n                      <Form.Group className=\"customDatePickerWidth form-input bg-warning\" >\r\n                        <Form.Label>Date and Time:</Form.Label>\r\n                        <div>                                                   \r\n                          <DatePicker \r\n                            customStyles={{dateInput:{borderWidth: 5}}} \r\n                            dateFormat=\"d MMMM yyyy @ h:mm aa\"\r\n                            selected={startDate} \r\n                            onChange={(date) => setStartDate(date)}   \r\n                            showTimeSelect\r\n                            timeFormat=\"HH:mm\"\r\n                            timeIntervals={15}                                                                                                             \r\n                          />\r\n                        </div>                          \r\n                      </Form.Group>\r\n\r\n                      <Form.Group className=\"form-input bg-warning\">\r\n                        <Form.Label>Meeting Duration:</Form.Label>                          \r\n                          <form >                        \r\n                              <select \r\n                                className=\"form-100\"\r\n                                onChange={(event) => changeDuration(event.target.value)}\r\n                                value={currentDuration}\r\n                              >\r\n                                <option value=\"45 minutes\">45 minutes</option>\r\n                                <option value=\"1 hour\">1 hour</option>\r\n                                <option value=\"1.5 hours\">1.5 hours</option>\r\n                                <option value=\"2 hours\">2 hours</option>\r\n                                <option value=\"3 hours\">3 hours</option>\r\n                                <option value=\"4 hours\">4 hours</option>\r\n                                <option value=\"5 hours\">5 hours</option>\r\n                                <option value=\"6 hours\">6 hours</option>\r\n                                <option value=\"7 hours\">7 hours</option>\r\n                                <option value=\"8 hours\">8 hours</option>\r\n                              </select>                        \r\n                          </form>\r\n                        \r\n                      </Form.Group>\r\n\r\n                      <Form.Group className=\"form-input bg-warning\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control \r\n                          as=\"textarea\"\r\n                          name=\"description\"\r\n                          type=\"text\" \r\n                          placeholder=\"Your event description\" \r\n                          style={{ height: '300px' }}\r\n                          value={formState.description}\r\n                          onChange={handleChange}\r\n                        />                \r\n                      </Form.Group>\r\n                     \r\n                      <Form.Group className=\"form-input bg-warning\" >\r\n                        <Form.Label>Location</Form.Label>                  \r\n                        <div class=\"checkbox\">\r\n                          <label>\r\n                              <input \r\n                              type=\"checkbox\"                              \r\n                              Checked={currentCheckbox} \r\n                              onChange={() => setCurrentCheckbox(!currentCheckbox)}                              \r\n                              /> Make this an online event\r\n                          </label>\r\n                        </div>\r\n                         \r\n                          {!currentCheckbox ? (\r\n                        <div>                                                       \r\n                          <GooglePlacesAutocomplete                            \r\n                            apiKey={API}\r\n                            // placeholder='Search'\r\n                            selectProps={{\r\n                              isClearable: true,\r\n                              value: address,\r\n                              onChange: (val) => {\r\n                                setAddress(val);          \r\n                              }                            \r\n                            }}\r\n                          />\r\n                          <pre style={{ textAlign: \"left\", background: \"#f0f0f0\", padding: 20 }}>\r\n                            {JSON.stringify(addressObj, 0, 2)}\r\n                          </pre>\r\n                        </div> ) : (\r\n                          <Form.Group className=\"bg-warning\">\r\n                            <Form.Label>Online Meeting URL </Form.Label>\r\n                            <Form.Control \r\n                              className=\"form-input form-100\"\r\n                              name=\"ZoomURL\"\r\n                              type=\"text\" \r\n                              placeholder=\"Enter meeting link\" \r\n                              value={formState.ZoomURL}\r\n                              onChange={handleChange}\r\n                            />\r\n                          </Form.Group> \r\n                        )}                        \r\n                      </Form.Group>\r\n                      \r\n                      \r\n                      <Form.Group className=\"form-input bg-warning\">\r\n                       {/* <div> \r\n                        <UploadImage  handleUpload={handleUpload}/>\r\n                      </div> */}\r\n\r\n                        <div className=\"App\">\r\n                        <header className=\"App-header\">\r\n                          <h1>Simple File Upload</h1>\r\n                          <a className=\"btn\" href=\"https://simplefileupload.com\">\r\n                            Try it now!\r\n                          </a>\r\n                        </header>                                              \r\n                            <main>\r\n                              <div className=\"upload-wrapper\">                      \r\n                                <SimpleFileUpload\r\n                                  apiKey=\"p387f878c784b7ce41f1f00fc7e04271e\"                          \r\n                                  // width=\"300\"\r\n                                  // height=\"300\"\r\n                                  preview=\"false\"\r\n                                  onSuccess={handleFile}                                                  \r\n                                />\r\n                                                    \r\n                              </div>\r\n                              <p>photo url : {photo} </p> \r\n                            </main>                     \r\n                          </div>\r\n                        <Button className=\"bg-dark\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                      </Form.Group>\r\n\r\n                    </Form>\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </>\r\n          ) : (          \r\n          <Redirect to='/'/>          \r\n      )}\r\n    </div>\r\n  );\r\n}","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\components\\UploadImage\\index.js",["85","86","87"],"import React, {useState} from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport { UPLOAD_IMAGE } from '../../utils/mutations';\r\n\r\nexport default function UploadImage({handleUpload}) {\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const [uploadImage, {error}] = useMutation(UPLOAD_IMAGE, {\r\n        // onCompleted: data => console.log(data) //1\r\n    });\r\n\r\n    // console.log(uploadImage)\r\n\r\n    const imageHandler = async (event) => {\r\n        event.preventDefault();      \r\n        try {\r\n            const file = await event.target.files[0] \r\n            if(!file) return\r\n\r\n            // console.log(meetingPhoto); //2\r\n\r\n            const newImage =  await uploadImage({variables: {file}});\r\n            // console.log(newImage) //3\r\n\r\n            setImage(file.name)\r\n\r\n            handleUpload({\r\n                file: `/uploads/${newImage.data.uploadImage.filename}`\r\n                // file: newImage.data.uploadImage.filename\r\n                \r\n            });\r\n\r\n            // console.log(meetingPhoto.name) //4\r\n\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n      <Form.Group controlId=\"formFile\">\r\n        <Form.Label>Featured Meeting Photo:</Form.Label>\r\n        <Form.Control type=\"file\" name=\"file\" onChange={imageHandler}/>\r\n      </Form.Group>\r\n    </>\r\n  );\r\n}","C:\\Users\\DRA90558\\Desktop\\BootCamp Repos\\project 3\\meet-and-learn\\client\\src\\pages\\SingleMeeting.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":6,"column":3,"nodeType":"94","messageId":"95","endLine":6,"endColumn":17},{"ruleId":"92","severity":1,"message":"96","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":12},{"ruleId":"92","severity":1,"message":"97","line":4,"column":39,"nodeType":"94","messageId":"95","endLine":4,"endColumn":47},{"ruleId":"92","severity":1,"message":"98","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":13},{"ruleId":"92","severity":1,"message":"99","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"99","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":14},{"ruleId":"92","severity":1,"message":"100","line":14,"column":8,"nodeType":"94","messageId":"95","endLine":14,"endColumn":19},{"ruleId":"92","severity":1,"message":"101","line":26,"column":3,"nodeType":"94","messageId":"95","endLine":26,"endColumn":27},{"ruleId":"92","severity":1,"message":"102","line":55,"column":24,"nodeType":"94","messageId":"95","endLine":55,"endColumn":29},{"ruleId":"92","severity":1,"message":"103","line":55,"column":32,"nodeType":"94","messageId":"95","endLine":55,"endColumn":36},{"ruleId":"104","severity":1,"message":"105","line":59,"column":25,"nodeType":"106","messageId":"107","endLine":59,"endColumn":27},{"ruleId":"92","severity":1,"message":"103","line":64,"column":15,"nodeType":"94","messageId":"95","endLine":64,"endColumn":19},{"ruleId":"92","severity":1,"message":"108","line":83,"column":9,"nodeType":"94","messageId":"95","endLine":83,"endColumn":21},{"ruleId":"92","severity":1,"message":"109","line":2,"column":16,"nodeType":"94","messageId":"95","endLine":2,"endColumn":22},{"ruleId":"92","severity":1,"message":"110","line":8,"column":12,"nodeType":"94","messageId":"95","endLine":8,"endColumn":17},{"ruleId":"92","severity":1,"message":"102","line":10,"column":26,"nodeType":"94","messageId":"95","endLine":10,"endColumn":31},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'createHttpLink' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","'Link' is defined but never used.","'UploadImage' is defined but never used.","'SimpleFileUploadProvider' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleUpload' is assigned a value but never used.","'Button' is defined but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]